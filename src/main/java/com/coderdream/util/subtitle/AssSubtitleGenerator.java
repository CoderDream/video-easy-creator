package com.coderdream.util.subtitle;

import com.coderdream.vo.SentenceDurationVO;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.List;

public class AssSubtitleGenerator {

  private static final DecimalFormat TIME_FORMAT = new DecimalFormat("00");
  private static final int VERTICAL_MARGIN = 50; // 字幕上下间隔
  private static final int VERTICAL_GAP = 50;    // 字幕之间的间隔
  private static final double SCREEN_HEIGHT_PERCENT = 0.7; // 总占用屏幕的高度百分比

  public static void main(String[] args) {
    List<SentenceDurationVO> sentences = SubtitleUtil.genSubtitle(
      "CampingInvitation_cht_04"); // 获取句子列表
    generateAssSubtitles(sentences, "output/"); // 生成ASS字幕文件
  }

  public static void generateAssSubtitles(List<SentenceDurationVO> sentences,
    String outputDir) {

    String f = "C:\\Users\\CoderDream\\Videos\\CampingInvitation_cht_04\\CampingInvitation_cht_04.chn2.ass";

    File assFile = new File(f);
//    File assFile = new File(outputDir + "CampingInvitation_cht_04.ass");

    try (BufferedWriter writer = new BufferedWriter(new FileWriter(assFile))) {
      writeScriptInfo(writer);
      writeStyles(writer);
      writeEvents(writer, sentences);
      System.out.println("ASS字幕文件已成功生成！");
    } catch (IOException e) {
      System.err.println("生成ASS字幕文件时出错: " + e.getMessage());
    }
  }

  private static void writeScriptInfo(BufferedWriter writer)
    throws IOException {
    writer.write("[Script Info]\n");
    writer.write("Title: Example Subtitle\n");
    writer.write("Original Script: Generated by Java\n");
    writer.write("ScriptType: v4.00+\n");
    writer.write("Collisions: Normal\n");
    writer.write("PlayDepth: 0\n\n");
  }

  private static void writeStyles(BufferedWriter writer) throws IOException {
    writer.write("[Styles]\n");
//    writer.write("Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n");
    writer.write(
      "Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n");

    // ID样式（居左上角）
    writer.write(
      "Style: IDStyle,Arial,16,&HFFFFFF,&HFFFFFF,&H000000,&H80000000,-1,0,0,0,100,100,0,0,1,1.5,0,5,10,10,10,1\n");

    // 英文样式（居中）
    writer.write(
      "Style: EnglishStyle,Arial,16,&HFF0000,&HFF0000,&H000000,&H80000000,-1,0,0,0,100,100,0,0,1,1.5,0,5,10,10,100,1\n");

    // 音标样式（居中）
    writer.write(
      "Style: PhoneticsStyle,Arial Unicode MS,14,&HFFFF00,&HFFFF00,&H000000,&H80000000,-1,0,0,0,100,100,0,0,1,1.5,0,5,10,10,10,1\n");

    // 中文样式（居中，使用黑体）
    writer.write(
      "Style: ChineseStyle,SimHei,18,&H0000FF,&H0000FF,&H000000,&H80000000,-1,0,0,0,100,100,0,0,1,1.5,0,5,10,10,100,1\n");
  }

  private static void writeEvents(BufferedWriter writer,
    List<SentenceDurationVO> sentences) throws IOException {
    writer.write("[Events]\n");
    writer.write(
      "Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n");

    double startTimeInSeconds = 0.0; // 起始时间（秒）
    double totalHeight =
      SCREEN_HEIGHT_PERCENT * 1000; // 假设屏幕高度为1000px，调整为70%高度占用
    double singleHeight = totalHeight / 4; // 4个字幕（包括ID）均分高度

    for (SentenceDurationVO sentence : sentences) {
      // 计算每个字幕的开始时间和结束时间
      double endTimeInSeconds =
        startTimeInSeconds + sentence.getTotalDuration();
      String startTime = convertSecondsToTimeFormat(startTimeInSeconds);
      String endTime = convertSecondsToTimeFormat(endTimeInSeconds);

      // 依次为ID、音标、中文和英文生成字幕条目
      writeEvent(writer, startTime, endTime, "IDStyle",
        "{\\an7}" + sentence.getId().toString(), 10, 10);
      writeEvent(writer, startTime, endTime, "EnglishStyle",
        "{\\an8}" + sentence.getEnglish(), 10, 10);
      writeEvent(writer, startTime, endTime, "PhoneticsStyle",
        "{\\an5}" + sentence.getPhonetics(), 10, 10);
      writeEvent(writer, startTime, endTime, "ChineseStyle",
        "{\\an2}" + sentence.getChinese(), 10, 10);

      startTimeInSeconds = endTimeInSeconds;
    }
  }

  private static void writeEvent(BufferedWriter writer, String startTime,
    String endTime, String style, String text, int a, int b)
    throws IOException {
    writer.write(
      String.format("Dialogue: 0,%s,%s,%s,,0,0,0,,%s\n", startTime, endTime,
        style, text));
  }

  public static String convertSecondsToTimeFormat(double seconds) {
    int hours = (int) (seconds / 3600);
    int minutes = (int) ((seconds % 3600) / 60);
    int secs = (int) (seconds % 60);
    int millis = (int) ((seconds - (int) seconds) * 1000);
    return String.format("%02d:%02d:%02d.%03d", hours, minutes, secs, millis);
  }

  public static List<SentenceDurationVO> getSentences() {
    return List.of(
      new SentenceDurationVO(1, "phonetic1", "顺便说一下，别忘了带手电筒", 5.5,
        "By the way, don't forget to bring a flashlight", 6.48, 4 * 6.48 + 5.5),
      new SentenceDurationVO(2, "phonetic2", "明白了，那驱虫剂呢？", 4.95,
        "Got it, what about bug spray?", 5.74, 4 * 5.74 + 4.95)
    );
  }
}
